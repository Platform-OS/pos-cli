const n={get:async(t={})=>{const o=typeof window<"u"&&window.location.port!=="4173"&&window.location.port!=="5173"?`http://localhost:${parseInt(window.location.port)}/api/logsv2`:"http://localhost:3333/api/logsv2";if(t.stream_name=t.stream_name??"requests",t.aggregate==="http_request_path"&&(t.aggregate=" GROUP BY http_request_path, http_request_method"),t.start_time){let e=new Date(t.start_time);e.setHours(23,59,59),t.end_time=Math.floor(e.getTime()*1e3),t.start_time=Math.floor(e.getTime()-2592e5)}t.lb_status_codes&&(t.lb_status_codes=` lb_status_code IN (${t.lb_status_codes}) `);let s={},a="";t.lb_status_codes&&(a=" WHERE "),t.sql||(s.filters="SELECT lb_status_code, count(lb_status_code) as count FROM query GROUP BY lb_status_code ORDER BY count DESC"),t.sql||(t.aggregate?s.results=`SELECT http_request_path, count(http_request_path) as count, http_request_method, avg(target_processing_time) as avg_target_processing_time FROM query ${a} ${t.lb_status_codes??""} ${t.aggregate} ORDER BY count DESC`:s.results="SELECT _timestamp, http_request_url, http_request_path, http_request_method, lb_status_code, client, user_agent, request_processing_time, target_processing_time, sent_bytes FROM query LIMIT 150");const _={aggs:{...s},query:{sql:t.sql||`SELECT * FROM ${t.stream_name}`,from:t.from??0,size:t.size??150,start_time:t.start_time||0,end_time:t.end_time||0}};return fetch(`${o}`,{method:"POST",body:JSON.stringify(_),headers:{"Content-Type":"application/json"}}).then(e=>e.ok?e.json():Promise.reject(e)).then(e=>e).catch(e=>({error:e}))}};export{n};
