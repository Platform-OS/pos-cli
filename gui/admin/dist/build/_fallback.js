import { S as SvelteComponent, i as init, s as safe_not_equal, e as element, a as append, t as text, b as space, c as claim_element, d as children, f as claim_text, g as detach, h as claim_space, j as attr, k as insert, n as noop, l as component_subscribe, u as url } from './main2.js';

/* src\pages\_fallback.svelte generated by Svelte v3.24.1 */

function add_css() {
	var style = element("style");
	style.id = "svelte-viq1pm-style";
	style.textContent = ".huge.svelte-viq1pm{font-size:12rem}.e404.svelte-viq1pm{position:absolute;left:50%;top:50%;transform:translate(-50%, -50%);text-align:center}";
	append(document.head, style);
}

function create_fragment(ctx) {
	let div2;
	let div0;
	let t0;
	let t1;
	let div1;
	let t2;
	let a;
	let t3;
	let a_href_value;

	return {
		c() {
			div2 = element("div");
			div0 = element("div");
			t0 = text("404");
			t1 = space();
			div1 = element("div");
			t2 = text("Page not found.\r\n  ");
			a = element("a");
			t3 = text("Go back");
			this.h();
		},
		l(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "404");
			div0_nodes.forEach(detach);
			t1 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t2 = claim_text(div1_nodes, "Page not found.\r\n  ");
			a = claim_element(div1_nodes, "A", { href: true });
			var a_nodes = children(a);
			t3 = claim_text(a_nodes, "Go back");
			a_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(div0, "class", "huge svelte-viq1pm");
			attr(a, "href", a_href_value = /*$url*/ ctx[0]("../"));
			attr(div1, "class", "big");
			attr(div2, "class", "e404 svelte-viq1pm");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div0, t0);
			append(div2, t1);
			append(div2, div1);
			append(div1, t2);
			append(div1, a);
			append(a, t3);
		},
		p(ctx, [dirty]) {
			if (dirty & /*$url*/ 1 && a_href_value !== (a_href_value = /*$url*/ ctx[0]("../"))) {
				attr(a, "href", a_href_value);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div2);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let $url;
	component_subscribe($$self, url, $$value => $$invalidate(0, $url = $$value));
	return [$url];
}

class Fallback extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-viq1pm-style")) add_css();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Fallback;
